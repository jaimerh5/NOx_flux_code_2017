## varPower para contemplar la heterogeneidad de varianzas
## lme=Linear Mixed-Effects Models
## One approach is to define the null model as one with no fixed effects except for an intercept, indicated with a 1 on the right side of the ~
mod2.N2O<-lme(log(N2O)~TTO+Dia+TTO:Dia,random=~1|Caja,
correlation=corAR1(form=~1|Caja),control=list(maxIter=100),
# weights=varPower(),
data=GHG_lupa)
mod2.N2O
summary(mod2.N2O)
Anova(mod2.N2O)
res0<-residuals(mod2.N2O,type="pearson",level=0)
qqnorm(res0);qqline(res0)
plotNormalHistogram(res0)
plot(fitted(mod2.N2O),residuals(mod2.N2O))
normalityTest(~N2O, test="lillie.test", data=GHG_lupa) #si sale menor que 0.05 no son normales
# Lilliefors (Kolmogorov-Smirnov) normality test
## Verificamos si hemos corregido la heterogeneidad
plot(res0~fitted(mod2.N2O)) #todos los valores<3
abline(h=0)
#Tabla for N2O
with(GHG_lupa,tapply(N2O,Dia,mean))
with(GHG_lupa,tapply(N2O,TTO,mean))
with(GHG_lupa,tapply(N2O,Dia:TTO,mean))
interaction.plot(GHG_lupa$TTO, GHG_lupa$Dia, GHG_lupa$N2O,
col = colores) #colors()[grep("red",colors())][1:8])
interaction.plot(GHG_lupa$Dia, GHG_lupa$TTO, GHG_lupa$N2O,
col = colores) #colors()[grep("red",colors())][1:8])
colores <- c('green','navyblue','red','purple','yellow','brown','orangered1','violetred4')
## Medias estimadas para cada Semana por TTOamiento
library(emmeans) #Estimated marginal means (Least-squares means)
medias<-emmeans(mod2.N2O,~TTO|Dia)
medias
contrast(medias,method="pairwise")
## Gr?fico con las medias estimadas en cada TTOamiento por semanas
## ##
plot(medias,horizontal=FALSE)
Voy a quitar dias y voy a transformar en  Log
setwd('C:/Users/JaimeRecio/Documents/Expmto2017/MAIZ/ANALISIS ESTADISTICO')
GHG_lupa<-read_excel("Rcmdr_GHG_H_menos dias.xlsx")
class(GHG_lupa)
summary(GHG_lupa)
headTail(GHG_lupa)
## Convertir las variables caracteres en factores
GHG_lupa$Caja<-as.factor(GHG_lupa$Caja)
GHG_lupa$TTO<-as.factor(GHG_lupa$TTO)
GHG_lupa$Dia<-as.factor(GHG_lupa$Dia)
GHG_lupa$replica<-as.factor(GHG_lupa$replica)
str(GHG_lupa)
## An?lisis para la variable NO
## Gr?fico de los valores de NO por semana y para cada TTOamiento
coplot(N2O~Dia|TTO,GHG_lupa)
coplot(N2O~TTO|Dia,GHG_lupa)
#coplot=conditioning plot
## Estimaci?n del modelo con los factor TTO, Semana y su interacci?n
## Caja es un efecto aleatorio (modelo mixto)
## corAR1 implica un modelo de autocorrelacion entre los datos a lo largo de las 8 semanas
## varPower para contemplar la heterogeneidad de varianzas
## lme=Linear Mixed-Effects Models
## One approach is to define the null model as one with no fixed effects except for an intercept, indicated with a 1 on the right side of the ~
## Estimaci?n del modelo con los factor TTO, Semana y su interacci?n
## Caja es un efecto aleatorio (modelo mixto)
## corAR1 implica un modelo de autocorrelacion entre los datos a lo largo de las 8 semanas
## varPower para contemplar la heterogeneidad de varianzas
## lme=Linear Mixed-Effects Models
## One approach is to define the null model as one with no fixed effects except for an intercept, indicated with a 1 on the right side of the ~
mod2.N2O<-lme(N2O~TTO+Dia+TTO:Dia,random=~1|Caja,
correlation=corAR1(form=~1|Caja),control=list(maxIter=100),
# weights=varPower(),
data=GHG_lupa)
mod2.N2O
summary(mod2.N2O)
Anova(mod2.N2O)
res0<-residuals(mod2.N2O,type="pearson",level=0)
qqnorm(res0);qqline(res0)
plotNormalHistogram(res0)
plot(fitted(mod2.N2O),residuals(mod2.N2O))
normalityTest(~N2O, test="lillie.test", data=GHG_lupa) #si sale menor que 0.05 no son normales
# Lilliefors (Kolmogorov-Smirnov) normality test
## Verificamos si hemos corregido la heterogeneidad
plot(res0~fitted(mod2.N2O)) #todos los valores<3
abline(h=0)
#Tabla for N2O
with(GHG_lupa,tapply(N2O,Dia,mean))
with(GHG_lupa,tapply(N2O,TTO,mean))
with(GHG_lupa,tapply(N2O,Dia:TTO,mean))
interaction.plot(GHG_lupa$TTO, GHG_lupa$Dia, GHG_lupa$N2O,
col = colores) #colors()[grep("red",colors())][1:8])
interaction.plot(GHG_lupa$Dia, GHG_lupa$TTO, GHG_lupa$N2O,
col = colores) #colors()[grep("red",colors())][1:8])
colores <- c('green','navyblue','red','purple','yellow','brown','orangered1','violetred4')
## Medias estimadas para cada Semana por TTOamiento
library(emmeans) #Estimated marginal means (Least-squares means)
medias<-emmeans(mod2.N2O,~TTO|Dia)
medias
contrast(medias,method="pairwise")
## Gr?fico con las medias estimadas en cada TTOamiento por semanas
## ##
plot(medias,horizontal=FALSE)
Corr.input <- read.table('inputCorrelacionar_H.csv',sep=';',dec='.',header = T)
View(Correlate_H)
View(Correlate_H)
correlate(Corr.input[,5:11],corr.method = 'pearson',use='complete')
correlate(Corr.input[,5:11],corr.method = 'pearson')
rcorr.adjust(Corr.input[,5:11],type = 'pearson',use = 'complete')
# Pearson correlations:
#   NO     NO2     N2O     NH4     NO3   Tsoil    WFPS
# NO     1.0000  0.8093  0.1655  0.1665  0.3750 -0.2636 -0.1432
# NO2    0.8093  1.0000  0.0588  0.1343  0.5188 -0.3409 -0.2205
# N2O    0.1655  0.0588  1.0000  0.6509 -0.0213 -0.0883  0.1520
# NH4    0.1665  0.1343  0.6509  1.0000  0.1866 -0.1816  0.0086
# NO3    0.3750  0.5188 -0.0213  0.1866  1.0000 -0.3292 -0.1822
# Tsoil -0.2636 -0.3409 -0.0883 -0.1816 -0.3292  1.0000  0.2235
# WFPS  -0.1432 -0.2205  0.1520  0.0086 -0.1822  0.2235  1.0000
lm.1 <- lm(NO~Tsoil+WFPS, data=Corr.input)
summary(lm.1)
# Pearson correlations:
#   NO     NO2     N2O     NH4     NO3   Tsoil    WFPS
# NO     1.0000  0.8093  0.1655  0.1665  0.3750 -0.2636 -0.1432
# NO2    0.8093  1.0000  0.0588  0.1343  0.5188 -0.3409 -0.2205
# N2O    0.1655  0.0588  1.0000  0.6509 -0.0213 -0.0883  0.1520
# NH4    0.1665  0.1343  0.6509  1.0000  0.1866 -0.1816  0.0086
# NO3    0.3750  0.5188 -0.0213  0.1866  1.0000 -0.3292 -0.1822
# Tsoil -0.2636 -0.3409 -0.0883 -0.1816 -0.3292  1.0000  0.2235
# WFPS  -0.1432 -0.2205  0.1520  0.0086 -0.1822  0.2235  1.0000
lm.1 <- lm(NO~N2O+Tsoil, data=Corr.input)
summary(lm.1)
xyplot(NO~N2O, ty=c('p','r'))
xyplot(NO~N2O, ty=c('p','r'), data=Corr.input)
xyplot(NO~Tsoil, ty=c('p','r'), data=Corr.input)
# Pearson correlations:
#   NO     NO2     N2O     NH4     NO3   Tsoil    WFPS
# NO     1.0000  0.8093  0.1655  0.1665  0.3750 -0.2636 -0.1432
# NO2    0.8093  1.0000  0.0588  0.1343  0.5188 -0.3409 -0.2205
# N2O    0.1655  0.0588  1.0000  0.6509 -0.0213 -0.0883  0.1520
# NH4    0.1665  0.1343  0.6509  1.0000  0.1866 -0.1816  0.0086
# NO3    0.3750  0.5188 -0.0213  0.1866  1.0000 -0.3292 -0.1822
# Tsoil -0.2636 -0.3409 -0.0883 -0.1816 -0.3292  1.0000  0.2235
# WFPS  -0.1432 -0.2205  0.1520  0.0086 -0.1822  0.2235  1.0000
lm.1 <- lm(NO~NH4+Tsoil, data=Corr.input)
summary(lm.1)
splom(Corr.input[,5:11])
splom(Corr.input)
splom(Corr.input[,5:11])
att1<- scatterplot3d(x=WFPS,y=Tsoil,z=NO,data=Corr.input,
ty='p',highlight.3d=F,pch=20, #col='#525252',
xlab='WFPS (mm)',ylab='Tsoil (ºC)',zlab= 'Flux NO_U (ug m-2 h-1)')
library(scatterplot3d); library("rgl") #con rgl cargas plot3D
att1<- scatterplot3d(x=WFPS,y=Tsoil,z=NO,data=Corr.input,
ty='p',highlight.3d=F,pch=20, #col='#525252',
xlab='WFPS (mm)',ylab='Tsoil (ºC)',zlab= 'Flux NO_U (ug m-2 h-1)')
scatterplot3d(x=WFPS,y=Tsoil,z=NO,data=Corr.input,
ty='p',highlight.3d=F,pch=20, #col='#525252',
xlab='WFPS (mm)',ylab='Tsoil (ºC)',zlab= 'Flux NO_U (ug m-2 h-1)')
att1<- scatterplot3d(x=Corr.input$WFPS,y=Corr.input$Tsoil,z=Corr.input$NO,
ty='p',highlight.3d=F,pch=20, #col='#525252',
xlab='WFPS (mm)',ylab='Tsoil (ºC)',zlab= 'Flux NO_U (ug m-2 h-1)')
# Pearson correlations:
#   NO     NO2     N2O     NH4     NO3   Tsoil    WFPS
# NO     1.0000  0.8093  0.1655  0.1665  0.3750 -0.2636 -0.1432
# NO2    0.8093  1.0000  0.0588  0.1343  0.5188 -0.3409 -0.2205
# N2O    0.1655  0.0588  1.0000  0.6509 -0.0213 -0.0883  0.1520
# NH4    0.1665  0.1343  0.6509  1.0000  0.1866 -0.1816  0.0086
# NO3    0.3750  0.5188 -0.0213  0.1866  1.0000 -0.3292 -0.1822
# Tsoil -0.2636 -0.3409 -0.0883 -0.1816 -0.3292  1.0000  0.2235
# WFPS  -0.1432 -0.2205  0.1520  0.0086 -0.1822  0.2235  1.0000
lm.1 <- lm(NO~WFPS+Tsoil, data=Corr.input)
summary(lm.1)
att1$plane3d(lm.1,lty.box = "solid",col='#525252')
rcorr.adjust(Corr.input[,5:11],type = 'pearson',use = 'complete')
xyplot(NO~NO2, ty=c('p','r'), data=Corr.input)
lm.2 <- lm(NO~NO2, data=Corr.input)
summary(lm.2)
xyplot(NO~NO2+NO3, ty=c('p','r'), data=Corr.input)
lm.2 <- lm(NO~NO2+NO3, data=Corr.input)
summary(lm.2)
lm.2 <- lm(NO~NO2, data=Corr.input)
summary(lm.2)
res.lm.2 <- residuals(lm.2)
qqnorm(res.lm.2);qqline(res.lm.2)
plotNormalHistogram(res.lm.2)
plot(res.lm.2~fitted(lm.2)) #todos los valores<3
abline(h=0, lwd=0.4, col='blue');abline(h=c(-3,3), lty='dotted', col='blue');
outlierTest(lm.2)
qqnorm(res.lm.2);qqline(res.lm.2)
plot3d(x=Corr.input$WFPS,y=Corr.input$Tsoil,z=Corr.input$NO,
type = 'p', col='black')
plot3d(x=Corr.input$WFPS,y=Corr.input$Tsoil,z=Corr.input$NO,
type = 's', col='black')
attach(Matriz.UNI)
#filter(Mean.Urea>-50 && Mean.Urea<150) %>%
ggplot(Matriz.UNI,aes(x=Fecha, y=Mean.UNI, col= PeriodDay, size=SD.UNI)) +  #col=te pone cada periodo del dia en un color//
#size= te pone los puntos mas grandes si la sd es mas grande
geom_point(alpha=0.5) +    # para hacer n poco translucidos los puntos
geom_smooth(method=lm) +  #con poner geom_smooth() te crea una curva de relacion entre los grupos
#si metes method=lm te crea la recta
facet_wrap(~PeriodDay)
plot_ly(x = WFPS, y = Tsoil, z = NO, type = "contour",
contours =list(showlabels = TRUE))  %>%  colorbar(title = "NO tto ")
library(plotly)
library(plotly)
library(plot3D)
library("devtools")
plot_ly(x = WFPS, y = Tsoil, z = NO, type = "contour",
contours =list(showlabels = TRUE))  %>%  colorbar(title = "NO tto ")
attach(Corr.input)
plot_ly(x = WFPS, y = Tsoil, z = NO, type = "contour",
contours =list(showlabels = TRUE))  %>%  colorbar(title = "NO tto ")
plot_ly(x = WFPS, y = Tsoil, z = NO, type = "contour",
autocontour = F,
# contours = list(start = -50,end = 150,size = 10),%>% list(showlabels = TRUE))
contours = list(start = -5,end = 300,size = 50, showlabels = TRUE,coloring = 'heatmap'),
line = list(smoothing = 0),
contours =list(showlabels = TRUE))  %>%  colorbar(title = "NO tto ")
plot_ly(x = WFPS, y = Tsoil, z = NO, type = "contour",
autocontour = F,
# contours = list(start = -50,end = 150,size = 10),%>% list(showlabels = TRUE))
contours = list(start = -5,end = 200,size = 50, showlabels = TRUE,coloring = 'heatmap'),
line = list(smoothing = 0),
contours =list(showlabels = TRUE))  %>%  colorbar(title = "NO tto ")
plot_ly(x = WFPS, y = Tsoil, z = NO, type = "contour",
autocontour = F,
# contours = list(start = -50,end = 150,size = 10),%>% list(showlabels = TRUE))
contours = list(start = -10,end = 200,size = 10, showlabels = TRUE,coloring = 'heatmap'),
line = list(smoothing = 0),
contours =list(showlabels = TRUE))  %>%  colorbar(title = "NO tto ")
View(Corr.input)
plot_ly(x = WFPS, y = Tsoil, z = NO, type = "contour",
autocontour = F,
# contours = list(start = -50,end = 150,size = 10),%>% list(showlabels = TRUE))
contours = list(start = -10,end = 50,size = 10, showlabels = TRUE,coloring = 'heatmap'),
line = list(smoothing = 0),
contours =list(showlabels = TRUE))  %>%  colorbar(title = "NO tto ")
medias<-emmeans(mod.N2O,~TTO|Dia)
medias
contrast(medias,method="pairwise")
## Gr?fico con las medias estimadas en cada TTOamiento por semanas
## ##
plot(medias,horizontal=FALSE)
mod2.N2O<-lme(N2O~TTO+Dia+TTO:Dia,random=~1|Caja,
correlation=corAR1(form=~1|Caja),control=list(maxIter=100),
# weights=varPower(),
data=GHG_lupa)
mod2.N2O
summary(mod2.N2O)
Anova(mod2.N2O)
res0<-residuals(mod2.N2O,type="pearson",level=0)
qqnorm(res0);qqline(res0)
plotNormalHistogram(res0)
plot(fitted(mod2.N2O),residuals(mod2.N2O))
normalityTest(~N2O, test="lillie.test", data=GHG_lupa) #si sale menor que 0.05 no son normales
# Lilliefors (Kolmogorov-Smirnov) normality test
## Verificamos si hemos corregido la heterogeneidad
plot(res0~fitted(mod2.N2O)) #todos los valores<3
abline(h=0)
## Valores medios de NO para cada semana por TTOamiento
#Tabla for N2O
with(GHG_lupa,tapply(N2O,Dia,mean))
with(GHG_lupa,tapply(N2O,TTO,mean))
with(GHG_lupa,tapply(N2O,Dia:TTO,mean))
interaction.plot(GHG_lupa$TTO, GHG_lupa$Dia, GHG_lupa$N2O,
col = colores) #colors()[grep("red",colors())][1:8])
interaction.plot(GHG_lupa$Dia, GHG_lupa$TTO, GHG_lupa$N2O,
col = colores) #colors()[grep("red",colors())][1:8])
colores <- c('green','navyblue','red','purple','yellow','brown','orangered1','violetred4')
## Medias estimadas para cada Semana por TTOamiento
library(emmeans) #Estimated marginal means (Least-squares means)
medias<-emmeans(mod2.N2O,~TTO|Dia)
medias
contrast(medias,method="pairwise")
## Gr?fico con las medias estimadas en cada TTOamiento por semanas
## ##
plot(medias,horizontal=FALSE)
lm.2 <- lm(NO2~NO3+Tsoil+WFPS, data=Corr.input)
summary(lm.2)
res.lm.2 <- residuals(lm.2)
qqnorm(res.lm.2);qqline(res.lm.2)
plotNormalHistogram(res.lm.2)
plot(res.lm.2~fitted(lm.2)) #todos los valores<3
abline(h=0, lwd=0.4, col='blue');abline(h=c(-3,3), lty='dotted', col='blue');
outlierTest(lm.2)
library(plotly)
lm.2 <- lm(NO2~NO3+Tsoil, data=Corr.input)
summary(lm.2)
res.lm.2 <- residuals(lm.2)
qqnorm(res.lm.2);qqline(res.lm.2)
plot(res.lm.2~fitted(lm.2)) #todos los valores<3
abline(h=0, lwd=0.4, col='blue');abline(h=c(-3,3), lty='dotted', col='blue');
plotNormalHistogram(res.lm.2)
rcorr.adjust(Corr.input[,5:11],type = 'pearson',use = 'complete')
lm.2 <- lm(NO2~NO3+Tsoil+WFPS, data=Corr.input)
summary(lm.2)
res.lm.2 <- residuals(lm.2)
qqnorm(res.lm.2);qqline(res.lm.2)
lm.2 <- lm(NO2~NO3+Tsoil+NH4, data=Corr.input)
summary(lm.2)
res.lm.2 <- residuals(lm.2)
lm.2 <- lm(NO2~NO3+Tsoil+NO3, data=Corr.input)
summary(lm.2)
lm.2 <- lm(NO2~NO3+Tsoil+N2O, data=Corr.input)
summary(lm.2)
lm.2 <- lm(NO2~NO3+Tsoil+NO, data=Corr.input)
summary(lm.2)
lm.2 <- lm(NO2~NO3+NO, data=Corr.input)
summary(lm.2)
res.lm.2 <- residuals(lm.2)
qqnorm(res.lm.2);qqline(res.lm.2)
plotNormalHistogram(res.lm.2)
lm.3 <- lm(NO~NO3+NO2, data=Corr.input)
summary(lm.3)
lm.3 <- lm(NO~NH4+NO2, data=Corr.input)
summary(lm.3)
lm.3 <- lm(NO~N2O+NO2, data=Corr.input)
summary(lm.3)
res.lm.3 <- residuals(lm.3)
qqnorm(res.lm.3);qqline(res.lm.3)
plotNormalHistogram(res.lm.3)
plot(res.lm.3~fitted(lm.3)) #todos los valores<3
abline(h=0, lwd=0.4, col='blue');abline(h=c(-3,3), lty='dotted', col='blue');
plotNormalHistogram(res.lm.3)
lm.3 <- lm(NO~Tsoil+WFPS+NH4+NO3, data=Corr.input)
summary(lm.3)
lm.3 <- lm(NO~Tsoil+WFPS, data=Corr.input)
summary(lm.3)
lm.3 <- lm(NO~NO2+Tsoil+WFPS, data=Corr.input)
summary(lm.3)
lm.2 <- lm(NO2~NO3+NO, data=Corr.input)
summary(lm.2)
att2<- scatterplot3d(x=Corr.input$NO3,y=Corr.input$NO,z=Corr.input$NO2,
ty='p',highlight.3d=F,pch=20, #col='#525252',
xlab='WFPS (mm)',ylab='Tsoil (ºC)',zlab= 'Flux NO_U (ug m-2 h-1)')
att2$plane3d(lm.2,lty.box = "solid",col='#525252')
plot3d(x=Corr.input$NO3,y=Corr.input$NO,z=Corr.input$NO2,
type = 's', col='black')
rcorr.adjust(Corr.input[,5:11],type = 'pearson',use = 'complete')
Corr.input <- read.table('inputCorrelacionar_H.csv',sep=';',dec='.',header = T)
correlate(Corr.input[,5:11],corr.method = 'pearson')
rcorr.adjust(Corr.input[,5:11],type = 'pearson',use = 'pairwise')
lm.3 <- lm(NH4~NO3+Tsoil, data=Corr.input)
summary(lm.3)
res.lm.3 <- residuals(lm.3)
lm.3 <- lm(NO2~NO3+Tsoil+WFPS, data=Corr.input)
summary(lm.3)
lm.3 <- lm(NO2~NO3+Tsoil, data=Corr.input)
summary(lm.3)
res.lm.3 <- residuals(lm.3)
qqnorm(res.lm.3);qqline(res.lm.3)
plotNormalHistogram(res.lm.3)
plot(res.lm.3~fitted(lm.3)) #todos los valores<3
abline(h=0, lwd=0.4, col='blue');abline(h=c(-3,3), lty='dotted', col='blue');
att3<- scatterplot3d(x=Corr.input$NO3,y=Corr.input$Tsoil,z=Corr.input$NO2,
ty='p',highlight.3d=F,pch=20, #col='#525252',
xlab='WFPS (mm)',ylab='Tsoil (ºC)',zlab= 'Flux NO_U (ug m-2 h-1)')
att3$plane3d(lm.3,lty.box = "solid",col='#525252')
att3<- scatterplot3d(x=Corr.input$Tsoil,y=Corr.input$NO3,z=Corr.input$NO2,
ty='p',highlight.3d=T,pch=20, #col='#525252',
xlab='WFPS (mm)',ylab='Tsoil (ºC)',zlab= 'Flux NO_U (ug m-2 h-1)')
att3$plane3d(lm.3,lty.box = "solid",col='#525252')
att3<- scatterplot3d(x=Corr.input$Tsoil,y=Corr.input$NO3,z=Corr.input$NO2,
ty='p',highlight.3d=F,pch=1, #col='#525252',
xlab='WFPS (mm)',ylab='Tsoil (ºC)',zlab= 'Flux NO_U (ug m-2 h-1)')
att3$plane3d(lm.3,lty.box = "solid",col='#525252')
att3<- scatterplot3d(x=Corr.input$NO3,y=Corr.input$Tsoil,z=Corr.input$NO2,
ty='p',highlight.3d=F,pch=1, #col='#525252',
xlab='WFPS (mm)',ylab='Tsoil (ºC)',zlab= 'Flux NO_U (ug m-2 h-1)')
att3$plane3d(lm.3,lty.box = "solid",col='#525252')
plot3d(x=Corr.input$NO3,y=Corr.input$Tsoil,z=Corr.input$NO2,
type = 's', col='black')
att3<- scatterplot3d(x=Corr.input$NO3,y=Corr.input$Tsoil,z=Corr.input$NO2,
ty='p',highlight.3d=F,pch=1) #col='#525252')
aranjuez <- read.csv('data/aranjuez.csv')
# old <- setwd("~/github/intro")
setwd('C:/R/Curso_IntroR_2016/intro-master/data')
dir()
dats <- read.table('data/aranjuez.csv', sep=',', header=TRUE)
head(dats)
# old <- setwd("~/github/intro")
setwd('C:/R/Curso_IntroR_2016/intro-master/data')
dir()
dats <- read.table('aranjuez.csv', sep=',', header=TRUE)
head(dats)
#la primera
names(aranjuez)[1] <- 'Date'
head(aranjuez)
class(aranjuez)
aranjuez <- read.table('aranjuez.csv', sep=',', header=TRUE)
#la primera
names(aranjuez)[1] <- 'Date'
head(aranjuez)
class(aranjuez)
dif <- aranjuez$TempMax - aranjuez$TempMin
dif
mean(dif)
# con est me da NA, ed, valores ausentes.. vaya pua.. tengo que quitar los valores ausentes
mean(aranjuez$TempMin)
mean(aranjuez$TempMin, na.rm = TRUE)
#calcular la media de todas las variables
lapply(aranjuez, mean)
lapply(aranjuez, mean, na.rm = TRUE)
sapply(aranjuez, mean, na.rm = TRUE)
lapply(aranjuez, mean, na.rm = TRUE)
## Valores ausentes
## - =NA= está definido como =logical= NA=Valor ausente
class(NA)
head(aranjuez)
lapply(aranjuez, mean, na.rm = TRUE)
class(lapply(aranjuez, mean))
#######incluir una columna sabiendo si ha llovido o no##########
RR <- aranjuez$Rain!=0; RR
aranjuez$RainYes <- RR
#sumar dias que ha llovido
DiasRainTrue <- sum(aranjuez$RainYes,na.rm = TRUE); DiasRainTrue
aranjuez$RainYes
is.na(aranjuez$Rain)
anyNA(aranjuez)
which(is.na(aranjuez$Radiation))      #lugares del vector que cumple la condicion dentro de which
EJ4 <- with(aranjuez, Rain!=0 & (TempMax-TempMin)<30)
head(aranjuez[EJ4, ])
subset(aranjuez,
subset = (Radiation > 20 & TempAvg < 10),
select = c(Radiation, TempAvg,
TempMax, TempMin))
library(reshape2)
aranjuezWide <- aranjuez[, c('Radiation',
'TempAvg', 'TempMax',
'WindAvg', 'WindMax')]
head(aranjuezWide)
aranjuezLong <- stack(aranjuezWide)
head(aranjuezLong)
head(aranjuezWide)
head(aranjuezLong)
tail(aranjuezLong)
View(aranjuezLong)
melt(aranjuez, id.vars = 'Date',
variable.name = 'Variable',
value.name = 'Value')
aranjuezWide2 <- dcast(aranjuezLong2,
Variable ~ Date)
with(aranjuez, TempMax - TempMin)
###############################################################
aranjuez$Dif <- with(aranjuez, TempMax - TempMin)
aranjuez$Dif30 <- aranjuez$Dif > 30
aranjuez$Dif30
aggregate(TempAvg ~ Dif30, aranjuez, FUN = mean)
library(Rcmdr)
###################################################################################
setwd('C:/R/Expmto2017/MAIZ/EurochemScripts/StatisticalAnalysis')
dir()
MatrizClima <- read.table("ClimateData_ExpH.csv",dec='.', sep=';',header = T)
MatrizClima$Fecha=as.POSIXct(MatrizClima$Fecha,format='%d/%m/%Y')
MatrizClima$YMONDOY=as.numeric(format(MatrizClima$Fecha,format="%Y%m%d"))
summary(MatrizClima)
todos=NULL;ay2=NULL;Missed=NULL
Days <- ttoControl_DayMean$YMONDOY
gg <- MatrizClima$YMONDOY
for (k in 1:length(Days)){
Missed <- which(MatrizClima$YMONDOY==Days[k])
todos <- c(todos,Missed)}
MatrizClimaDef <- MatrizClima[todos,]
View(MatrizClimaDef)
WeekUrea <- aggregate(MatrizUrea,
by = list('Week'= format(MatrizUrea$Fecha,'%Y%W' )),
FUN = mean, na.rm=T )
WeekUrea <- aggregate(MatrizUrea,
by = list('Week'= format(MatrizUrea$Fecha,'%Y%W' )),
FUN = mean, na.rm=T )
View(WeekUrea)
WeekUrea$WOY <-  as.numeric(format(WeekUrea$Fecha,format="%W"))
# WeekUrea$Tsoil10 <-aggregate(ttoU_DayMean$Tsoil10,
#                              by = list('Week'= format(ttoU_DayMean$Fecha,'%Y%W' )),
#                              FUN = mean, na.rm=T )[,2]
View(WeekUrea)
debugSource('E:/R/Expmto2017/MAIZ/EurochemScripts/StatisticalAnalysis/00_Prepararacion.R')
## Carga las librerias necesarias para los analisis
## Si no est?n instalados lo paquetes debes instalarlos
library(RColorBrewer)
## Para importar datos como hojas excell
library(readxl)
## Para estimar modelos lineales mixtos (mixed effect models)
##Definicion Modelo mixto (MIXED):
# Propuesta de modelo estad´ıstico adecuada cuando la variable
# respuesta sigue una distribuci´on Normal, permitiendo modelizar su
# variabilidad y la presencia de observaciones correlacionadas
library(nlme)
## Pra la tabla Anova en modelos mixtos
library(car)
## Para estimar las medias en el modelo mixto
if(!require(emmeans)){install.packages("emmeans")}
if(!require(rcompanion)){install.packages("rcompanion")}
if(!require(psych)){install.packages("psych")}
if(!require(agricolae)){install.packages("agricolae")}
if(!require(nortest)){install.packages("nortest")}
if(!require(lsr)){install.packages("lsr")}
if(!require(factoextra)){install.packages("factoextra")}
if(!require(devtools)) install.packages("devtools")
if(!require(factoextra)) install.packages("factoextra")
setwd('C:/Users/JaimeRecio/Documents/Expmto2017/MAIZ/ANALISIS ESTADISTICO')
RManova_H<-read_excel("inputANOVAtemporal_ExpH.xlsx")
setwd('C:/Users/JaimeRecio/Documents/Expmto2017/MAIZ/ANALISIS ESTADISTICO')
setwd('C:/Users/JaimeRecio/Documents/Expmto2017/MAIZ/ANALISIS ESTADISTICO')
setwd('C:/Users/JaimeRecio/Documents/Expmto2017/MAIZ/ANALISIS ESTADISTICO')
setwd('C:/Users/JaimeRecio/Documents/Expmto2017/MAIZ/ANALISIS ESTADISTICO/ExpH')
## Gr?fico de los valores de NO por semana y para cada tratamiento
coplot(NOweek~WOY|Trat,RManova_H)
str(RManova_H)
RManova_H
View(RManova_H)
WeekUrea
plot(WeekUrea$WOY,
WeekUrea$Mean.Urea.NO, ty='l')
View(ttoU.NI_DayMean)
View(ttoU.NI_DayMean)
78.4*8
